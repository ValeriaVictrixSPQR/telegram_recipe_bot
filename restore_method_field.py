#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json

def restore_method_field():
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ–ª–µ method (–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—é) –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ä–µ—Ü–µ–ø—Ç—ã (–±–µ–∑ –ø–æ–ª—è method)
    with open('recipes.json', 'r', encoding='utf-8') as f:
        current_recipes = json.load(f)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Å –ø–æ–ª–Ω—ã–º –ø–æ–ª–µ–º method
    with open('recipes_old_structure_backup.json', 'r', encoding='utf-8') as f:
        backup_recipes = json.load(f)
    
    print(f"–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–µ 'method' –¥–ª—è {len(current_recipes)} —Ä–µ—Ü–µ–ø—Ç–æ–≤...")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–æ–º–µ—Ä—É —Ä–µ—Ü–µ–ø—Ç–∞
    backup_dict = {recipe['number']: recipe for recipe in backup_recipes}
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–µ method
    restored_count = 0
    missing_method = 0
    
    for i, recipe in enumerate(current_recipes):
        recipe_number = recipe['number']
        
        if recipe_number in backup_dict:
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–µ method
            recipe['method'] = backup_dict[recipe_number].get('method', '')
            restored_count += 1
        else:
            # –ï—Å–ª–∏ —Ä–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
            recipe['method'] = '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—é –Ω–µ —É–∫–∞–∑–∞–Ω–∞'
            missing_method += 1
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 20 —Ä–µ—Ü–µ–ø—Ç–æ–≤
        if (i + 1) % 20 == 0:
            print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {i + 1}/{len(current_recipes)}")
    
    print("\n" + "=" * 60)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø:")
    print("=" * 60)
    
    print(f"–í—Å–µ–≥–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤: {len(current_recipes)}")
    print(f"–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: {restored_count}")
    print(f"–ë–µ–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: {missing_method}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    print("\n–ü—Ä–∏–º–µ—Ä—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:")
    print("-" * 50)
    
    for i in range(min(3, len(current_recipes))):
        recipe = current_recipes[i]
        print(f"{i+1}. {recipe['name']}")
        print(f"   –ù–æ–º–µ—Ä: {recipe['number']}")
        print(f"   –í—Ä–µ–º—è: {recipe['cooking_time']} –º–∏–Ω—É—Ç")
        print(f"   –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: {recipe['method'][:80]}...")
        print()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã
    print(f"\n–°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã...")
    with open('recipes.json', 'w', encoding='utf-8') as f:
        json.dump(current_recipes, f, ensure_ascii=False, indent=4)
    
    print("‚úÖ –ì–æ—Ç–æ–≤–æ! –§–∞–π–ª recipes.json –æ–±–Ω–æ–≤–ª–µ–Ω —Å –ø–æ–ª–µ–º 'method'.")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    new_backup = f'recipes_5_fields_backup.json'
    with open(new_backup, 'w', encoding='utf-8') as f:
        json.dump(current_recipes, f, ensure_ascii=False, indent=4)
    
    print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {new_backup}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    print(f"\nüìã –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ—Ü–µ–ø—Ç–∞:")
    print("-" * 30)
    print("1. number - –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä")
    print("2. name - –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞")
    print("3. ingredients - –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã")
    print("4. method - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—é")
    print("5. cooking_time - –≤—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏")

if __name__ == "__main__":
    restore_method_field()
