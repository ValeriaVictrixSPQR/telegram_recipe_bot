name: Deploy to AMVERA

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        python -c "import flask; print('Flask imported successfully')"
        python -c "import gunicorn; print('Gunicorn imported successfully')"
        
    - name: Deploy to AMVERA via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.AMVERA_HOST }}
        username: ${{ secrets.AMVERA_USERNAME }}
        key: ${{ secrets.AMVERA_SSH_KEY }}
        port: ${{ secrets.AMVERA_PORT }}
        script: |
          echo "üöÄ Starting deployment to AMVERA..."
          
          # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
          cd /home/${{ secrets.AMVERA_USERNAME }}/telegram_recipe_bot
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
          echo "üõë Stopping current containers..."
          docker-compose down || true
          
          # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
          echo "üì• Pulling latest changes..."
          git pull origin main
          
          # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
          if [ ! -f .env ]; then
            echo "üìù Creating .env file..."
            cp env_example.txt .env
            echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" > .env
          fi
          
          # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
          echo "üîë Updating bot token..."
          sed -i "s/TELEGRAM_BOT_TOKEN=.*/TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}/" .env
          
          # –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
          echo "üî® Building and starting containers..."
          docker-compose up --build -d
          
          # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
          echo "‚è≥ Waiting for containers to start..."
          sleep 10
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
          echo "üìä Checking container status..."
          docker-compose ps
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
          echo "üè• Health check..."
          if curl -f http://localhost:8000/health; then
            echo "‚úÖ Application is healthy!"
          else
            echo "‚ùå Health check failed!"
            docker-compose logs
            exit 1
          fi
          
          echo "üéâ Deployment completed successfully!"
          
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "üöÄ Deployment to AMVERA completed successfully!"
        else
          echo "‚ùå Deployment to AMVERA failed!"
        fi
