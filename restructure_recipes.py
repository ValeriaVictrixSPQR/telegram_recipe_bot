#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json

def restructure_recipes():
    """–ò–∑–º–µ–Ω—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ä–µ—Ü–µ–ø—Ç–æ–≤, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ä–µ—Ü–µ–ø—Ç—ã
    with open('recipes.json', 'r', encoding='utf-8') as f:
        recipes = json.load(f)
    
    print(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {len(recipes)} —Ä–µ—Ü–µ–ø—Ç–æ–≤...")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    new_recipes = []
    
    for i, recipe in enumerate(recipes):
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç —Å –Ω—É–∂–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
        new_recipe = {
            "number": recipe.get('number', i + 1),
            "name": recipe.get('name', ''),
            "ingredients": recipe.get('ingredients', ''),
            "cooking_time": recipe.get('cooking_time', 0)
        }
        
        new_recipes.append(new_recipe)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 20 —Ä–µ—Ü–µ–ø—Ç–æ–≤
        if (i + 1) % 20 == 0:
            print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {i + 1}/{len(recipes)}")
    
    print("\n" + "=" * 60)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–ï–û–ë–†–ê–ó–û–í–ê–ù–ò–Ø:")
    print("=" * 60)
    
    print(f"–í—Å–µ–≥–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤: {len(new_recipes)}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    print("\n–ü—Ä–∏–º–µ—Ä—ã –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:")
    print("-" * 40)
    
    for i in range(min(5, len(new_recipes))):
        recipe = new_recipes[i]
        print(f"{i+1}. {recipe['name']}")
        print(f"   –ù–æ–º–µ—Ä: {recipe['number']}")
        print(f"   –í—Ä–µ–º—è: {recipe['cooking_time']} –º–∏–Ω—É—Ç")
        print(f"   –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: {recipe['ingredients'][:50]}...")
        print()
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
    backup_filename = 'recipes_old_structure_backup.json'
    with open(backup_filename, 'w', encoding='utf-8') as f:
        json.dump(recipes, f, ensure_ascii=False, indent=4)
    
    print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å—Ç–∞—Ä–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: {backup_filename}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    print(f"\n–°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É...")
    with open('recipes.json', 'w', encoding='utf-8') as f:
        json.dump(new_recipes, f, ensure_ascii=False, indent=4)
    
    print("‚úÖ –ì–æ—Ç–æ–≤–æ! –§–∞–π–ª recipes.json –æ–±–Ω–æ–≤–ª–µ–Ω —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π.")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ—Ç–æ–≤–∫–∏
    time_stats = {}
    for recipe in new_recipes:
        time = recipe['cooking_time']
        if time not in time_stats:
            time_stats[time] = 0
        time_stats[time] += 1
    
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ—Ç–æ–≤–∫–∏:")
    print("-" * 30)
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    sorted_times = sorted(time_stats.items())
    for time, count in sorted_times:
        if time == 0:
            print(f"–ë–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏: {count} —Ä–µ—Ü–µ–ø—Ç–æ–≤")
        else:
            print(f"{time:3d} –º–∏–Ω—É—Ç: {count:3d} —Ä–µ—Ü–µ–ø—Ç–æ–≤")

if __name__ == "__main__":
    restructure_recipes()
